<html class="ts">

<head>
  <title>Pushie</title>
  <link rel="stylesheet" type="text/css" href="stylesheets/example.css">
  <!-- <link rel="stylesheet" type="text/css" href="stylesheets/pushie.css"> -->
  <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta charset="utf-8">
  <script src='js/example.min.js'></script>
</head>

<body>
  <header class="ts-text-container">
    <h1>Pushie - window push state object</h1>
    <!-- <p>Pushie submits form data via AJAX. Pushie supports JSONP, GET, POST, DELETE and multipart/form-data file Uploads without the baggage of a full framework.</p> -->
    </p>
    <p>Full API <a href="http://typesettin.github.io/pushie/api/html">documentation</a>
    </p>
    <hr>
  </header>
  <main class="ts-text-container">
    <section class="ts-text-container">
      <div class="ts-row ts-no-heading-margin ">
        <div class="ts-col-span6">
          <h6 id="status">HTML5 History API not supported</h6>
          <p>
            <em>Last event fired:
              <span id="lastevent">(none)</span>
            </em>
          </p>
          <!-- <p>To test the History API, click through the urls below. Note that none of these urls point to
            <em>real</em> pages. JavaScript will intercept these clicks, load data and the browser address bar will
            <em>appear</em> to change - but this is the History API in action!</p>
          <p>Use the back and forward buttons in your browser to navigate the history.</p> -->
          <ul id="examples">
            <li><a href="/history/first">first</a>
            </li>
            <li><a href="/history/second">second</a>
            </li>
            <li><a href="/history/third">third</a>
            </li>
            <li><a href="/history/fourth">fourth</a>
            </li>
            <li>
              <span id="replace-history" class="ts-text-accent-color ts-cursor-pointer">replace third history</span>
            </li>
          </ul>
          <p>
            <small>Note: since these urls aren't real, refreshing the page will land on an invalid url.</small>
          </p>
        </div>
        <div class="ts-col-span6">
          <h6>Response Data</h6>
          <summary id="output" class="ts-border-accent-color ts-padding-lg ts-border-solid-micro">URL:
            <strong>
              <% if(typeof url==='string' ){%>
                <%-url%>
                  <%}%>
            </strong>, name:
            <strong>
              <% if(typeof name==='string' ){%>
                <%-name%>
                  <%}%>
            </strong>, location:
            <strong>
              <% if(typeof location==='string' ){%>
                <%-location%>
                  <%}%>
            </strong>
          </summary>
        </div>
      </div>
    </section>
  </main>
  <script>
  window.initialdata = {
    title: '<% if(typeof title==="string" ){%> <%-title%> <%}%>',
    url: '<% if(typeof url==="string" ){%> <%-url%> <%}%>',
    name: '<% if(typeof name==="string" ){%> <%-name%> <%}%>',
    location: '<% if(typeof location==="string" ){%> <%-location%> <%}%>',
  }
  </script>
  <!--
  <script>
  (function(i, s, o, g, r, a, m) {
    i['GoogleAnalyticsObject'] = r;
    i[r] = i[r] || function() {
      (i[r].q = i[r].q || []).push(arguments)
    }, i[r].l = 1 * new Date();
    a = s.createElement(o),
      m = s.getElementsByTagName(o)[0];
    a.async = 1;
    a.src = g;
    m.parentNode.insertBefore(a, m)
  })(window, document, 'script', '//www.google-analytics.com/analytics.js', 'ga');

  ga('create', 'UA-52892914-6', 'auto');
  ga('send', 'pageview');
  </script>
  -->
</body>

</html>