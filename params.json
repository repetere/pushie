{"name":"Pushie","tagline":"html5 push state","body":"# pushie  [![NPM version](https://badge.fury.io/js/pushie.svg)](http://badge.fury.io/js/pushie)\r\n\r\n\r\n** CommonJS/Browserified ajax form submission **\r\n\r\nPushie is a browser history api wrapper, with fallback support to use URL hashes. \r\n\r\n[API Documenation](https://yawetse.github.io/pushie/api/html/index.html)\r\n\r\n## Example\r\n\r\nCheck out `example/index.html`, the example javascript for the example page is `resources/js/example_src.js`\r\n\r\n## Installation\r\n\r\n```\r\n$ npm install pushie\r\n```\r\n\r\nPushie is a browserified/commonjs javascript module.\r\n\r\n## Usage\r\n\r\n*JavaScript*\r\n```javascript\r\nvar Pushie = require('pushie'),\r\n\tmyPushie,\r\n\tuiButton;\r\n\r\n//initialize nav component after the dom has loaded\r\nwindow.addEventListener('load',function(){\r\n\tmyPushie = new Pushie({\r\n    replacecallback: function(data){console.log(data)},\r\n    pushcallback: function(data){console.log(data)},\r\n    popcallback: function(data){console.log(data)}\r\n  });\r\n  uiButton = document.querySelector('#uiButton');\r\n  uiButton.addEventListener('click',function(event){\r\n  \tevent.preventDefault();\r\n  \t//normally you would do this after you queried for some data\r\n  \tmyPushie.pushHistory({\r\n\t\t\tdata: {\r\n\t\t\t\ttitle: 'some',\r\n\t\t\t\tname: 'sample',\r\n\t\t\t\tlocation: 'data you want to save'\r\n\t\t\t},\r\n\t\t\ttitle: 'some sample title',\r\n\t\t\thref: event.target.href\r\n\t\t});\r\n  \treturn false;\r\n  });\r\n\t//expose your nav component to the window global namespace\r\n\twindow.myPushie = myPushie;\r\n});\r\n```\r\n\r\n*HTML*\r\n```html\r\n<html>\r\n\t<head>\r\n  \t<title>Your Page</title>\r\n  \t<script src='[path/to/browserify/bundle].js'></script>\r\n\t</head>\r\n\t<body>\r\n\t\t<p>\r\n\t\t\t<a href=\"/newhistory/javascripthref\" id=\"uiButton\">replace third history</a>\r\n\t\t</p>\r\n\t</body>\r\n</html>\r\n```\r\n\r\n##OPTIONS\r\n```javascript\r\ndefaultOptions = {\r\n\tpush_state_support: true,\r\n\treplacecallback: function (data) {\r\n\t\tconsole.log(data);\r\n\t},\r\n\tpopcallback: function (data) {\r\n\t\tconsole.log(data);\r\n\t},\r\n\tpushcallback: function (data) {\r\n\t\tconsole.log(data);\r\n\t}\r\n};\r\n```\r\n\r\n##API\r\n\r\n```javascript\r\n//submit pushie via ajax\r\nmyPushie.replaceHistory(options);  // options.data, options.title, options.href\r\nmyPushie.pushHistory(options); // options.data, options.title, options.href\r\nmyPushie.popHistory(options); // if no window.history.pushState then supply options.href\r\n\r\n//events\r\nmyPushie.on('initialized'); // callback()\r\nmyPushie.on('pushhistory',callback); // callback(data)\r\nmyPushie.on('replacehistory',callback); // callback(data)\r\nmyPushie.on('pophistory',callback); // callback(data)\r\n```\r\n##Development\r\n*Make sure you have grunt installed*\r\n```\r\n$ npm install -g grunt-cli\r\n```\r\n\r\nThen run grunt watch\r\n```\r\n$ grunt watch #uses grunt-connect on port 8181 \r\n```\r\n##For generating documentation\r\n```\r\n$ grunt doc\r\n$ jsdoc2md lib/**/*.js index.js > doc/api.md\r\n```\r\n\r\n##Notes\r\n* The Pushie uses Node's event Emitter for event handling.\r\n* In order to test post submission, grunt connect is used on port 8181","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}